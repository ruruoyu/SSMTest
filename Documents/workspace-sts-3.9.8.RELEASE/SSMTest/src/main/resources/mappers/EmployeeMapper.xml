<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haina.ssm.dao.EmployeeMapper">
	<resultMap id="BaseResultMap"
		type="com.haina.ssm.bean.Employee">
		<id column="employee_id" jdbcType="INTEGER" property="employeeId" />
		<result column="employee_name" jdbcType="VARCHAR"
			property="employeeName" />
		<result column="employee_gender" jdbcType="VARCHAR"
			property="employeeGender" />
		<result column="dept_id" jdbcType="INTEGER"
			property="dept.deptId" />
		<result column="dept_name" jdbcType="INTEGER"
			property="dept.deptName" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		e.employee_id, e.employee_name, e.employee_gender, d.dept_id, d.dept_name
	</sql>
	<select id="selectAllEmployee" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_employee e left join tb_dept d on e.dept1_id = d.dept_id
	</select>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_employee
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from tb_employee
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.haina.ssm.bean.EmployeeExample">
		delete from tb_employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.haina.ssm.bean.Employee">
		insert into tb_employee (employee_id, employee_name, employee_gender,
		dept1_id)
		values (#{employeeId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR},
		#{employeeGender,jdbcType=VARCHAR},
		#{dept1Id,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.haina.ssm.bean.Employee">
		insert into tb_employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="employeeId != null">
				employee_id,
			</if>
			<if test="employeeName != null">
				employee_name,
			</if>
			<if test="employeeGender != null">
				employee_gender,
			</if>
			<if test="dept1Id != null">
				dept1_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="employeeId != null">
				#{employeeId,jdbcType=INTEGER},
			</if>
			<if test="employeeName != null">
				#{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="employeeGender != null">
				#{employeeGender,jdbcType=VARCHAR},
			</if>
			<if test="dept1Id != null">
				#{dept1Id,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.haina.ssm.bean.EmployeeExample"
		resultType="java.lang.Long">
		select count(*) from tb_employee
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update tb_employee
		<set>
			<if test="record.employeeId != null">
				employee_id = #{record.employeeId,jdbcType=INTEGER},
			</if>
			<if test="record.employeeName != null">
				employee_name = #{record.employeeName,jdbcType=VARCHAR},
			</if>
			<if test="record.employeeGender != null">
				employee_gender = #{record.employeeGender,jdbcType=VARCHAR},
			</if>
			<if test="record.dept1Id != null">
				dept1_id = #{record.dept1Id,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update tb_employee
		set employee_id = #{record.employeeId,jdbcType=INTEGER},
		employee_name = #{record.employeeName,jdbcType=VARCHAR},
		employee_gender = #{record.employeeGender,jdbcType=VARCHAR},
		dept1_id = #{record.dept1Id,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.haina.ssm.bean.Employee">
		update tb_employee
		<set>
			<if test="employeeName != null">
				employee_name = #{employeeName,jdbcType=VARCHAR},
			</if>
			<if test="employeeGender != null">
				employee_gender = #{employeeGender,jdbcType=VARCHAR},
			</if>
			<if test="dept1Id != null">
				dept1_id = #{dept1Id,jdbcType=INTEGER},
			</if>
		</set>
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.haina.ssm.bean.Employee">
		update tb_employee
		set employee_name = #{employeeName,jdbcType=VARCHAR},
		employee_gender = #{employeeGender,jdbcType=VARCHAR},
		dept1_id = #{dept1Id,jdbcType=INTEGER}
		where employee_id = #{employeeId,jdbcType=INTEGER}
	</update>
</mapper>